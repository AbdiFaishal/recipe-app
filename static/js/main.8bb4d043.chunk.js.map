{"version":3,"sources":["img/logo.png","img/icons/refresh.png","components/AppLogo.js","config.js","actions/index.js","constants/action-types.js","components/SearchForm.js","components/hooks/useLimitTitle.js","components/Like.js","components/Likes.js","components/NavBar.js","components/Recipe.js","components/LoadingSpinner.js","components/hooks/useSlicedList.js","components/RecipeList.js","components/hooks/useResetActiveClass.js","components/hooks/usePageNumber.js","components/Pagination.js","components/ResultRecipe.js","components/RecipeFig.js","components/hooks/useLiked.js","components/hooks/useCalcTime.js","components/RecipeDetails.js","components/IngredientItem.js","components/IngredientList.js","components/RecipeIngredient.js","components/RecipeDirections.js","components/RecipePage.js","components/ConfirmModal.js","containers/App.js","serviceWorker.js","reducers/reducers.js","reducers/index.js","index.js"],"names":["module","exports","Logo","src","logo","alt","className","proxy","isInputEmpty","value","type","payload","getRecipeDetail","id","dispatch","a","axios","get","res","data","recipe","handleModal","SearchForm","useDispatch","emptyInput","useSelector","state","searchField","inputValidation","placeholder","onChange","e","target","onClick","query","preventDefault","recipes","count","message","useLimitTitle","title","limit","newTitle","length","split","reduce","acc","cur","push","join","Like","author","img","titleConvert","to","Likes","likedRecipes","handleLikes","heartActive","map","el","i","key","NavBar","Recipe","image_url","publisher","recipe_id","document","querySelectorAll","forEach","classList","remove","querySelector","add","handleRecipeDetail","LoadingSpinner","loading","useSlicedList","useState","slicedList","setSlicedList","getRecipes","currentPage","handlePagination","listPerPage","useEffect","indexOfLastPost","indexOfFirstPost","slice","RecipeList","isPending","errorMessage","error","recipeAPIResult","useResetActiveClass","usePageNumber","pageNumber","b","Math","ceil","Pagination","removeResultsClass","calculatePage","recipeDetail","console","log","currentPath","useLocation","pathname","number","handlePage","parentNode","handlePaginate","ResultRecipe","RecipeFig","useLiked","findIndex","index","splice","useCalcTime","periods","setPeriods","ingredients","numIng","RecipeDetails","props","params","useParams","isLiked","deleteLiked","calcTime","currentID","likes","deleteLike","like","handleLike","IngredientItem","ingredient","IngredientList","RecipeIngredient","RecipeDirections","href","source_url","rel","RecipePage","ConfirmModal","modalOpen","App","persistData","localStorage","setItem","JSON","stringify","readStorage","storage","parse","getItem","setState","this","path","component","Component","Boolean","window","location","hostname","match","initialStateSearch","initialStateRecipes","initialStateRecipeDetail","initialStateLikes","initialStatePagination","rootReducers","combineReducers","action","errorDetail","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8bb4d043.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.562b5911.png\";","module.exports = __webpack_public_path__ + \"static/media/refresh.c35a4058.png\";","import React from \"react\";\r\nimport logo from \"../img/logo.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <>\r\n      <img src={logo} alt=\"\" className=\"header__logo\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","export const proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n","import axios from \"axios\";\r\nimport { proxy } from \"./../config\";\r\n\r\nimport {\r\n  CHANGE_SEARCH_FIELD,\r\n  RESET_SEARCH_FIELD,\r\n  IS_INPUT_EMPTY,\r\n  FETCH_RECIPES_PENDING,\r\n  FETCH_RECIPES_SUCCESS,\r\n  FETCH_RECIPES_FAILED,\r\n  FETCH_DETAIL_PENDING,\r\n  FETCH_DETAIL_SUCCESS,\r\n  FETCH_DETAIL_FAILED,\r\n  ADD_LIKE,\r\n  DELETE_LIKE,\r\n  CHANGE_PAGINATION_PAGE,\r\n  HANDLE_MODAL,\r\n  HANDLE_CONFIRM,\r\n} from \"./../constants/action-types\";\r\n\r\n// search input form\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text,\r\n});\r\n\r\n// reset search input after click event\r\nexport const resetSearchField = () => ({\r\n  type: RESET_SEARCH_FIELD,\r\n});\r\n\r\n// check if search input is empty\r\nexport const isInputEmpty = (value) => ({\r\n  type: IS_INPUT_EMPTY,\r\n  payload: value,\r\n});\r\n\r\n// fetching recipe from API\r\nexport const getRecipes = (query) => async (dispatch) => {\r\n  dispatch({ type: FETCH_RECIPES_PENDING });\r\n  try {\r\n    const res = await axios.get(\r\n      `${proxy}https://recipesapi.herokuapp.com/api/search?q=${query}`\r\n    );\r\n    dispatch({\r\n      type: FETCH_RECIPES_SUCCESS,\r\n      payload: { data: res.data.recipes, count: res.data.count },\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_RECIPES_FAILED, payload: error.message });\r\n  }\r\n  // axios\r\n  //   .get(`${proxy}https://recipesapi.herokuapp.com/api/searchh?q=${query}`)\r\n  //   .then((res) => {\r\n  //     dispatch({ type: FETCH_RECIPES_SUCCESS, payload: res.data.recipes });\r\n  //   })\r\n  //   .catch((error) =>\r\n  //     dispatch({ type: FETCH_RECIPES_FAILED, payload: error.message })\r\n  //   );\r\n};\r\n\r\n// fetching recipe detail from API\r\nexport const getRecipeDetail = (id) => async (dispatch) => {\r\n  dispatch({ type: FETCH_DETAIL_PENDING });\r\n  try {\r\n    const res = await axios.get(\r\n      `${proxy}https://recipesapi.herokuapp.com/api/get?rId=${id}`\r\n    );\r\n    dispatch({ type: FETCH_DETAIL_SUCCESS, payload: res.data.recipe });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_DETAIL_FAILED, payload: error });\r\n  }\r\n  //   axios\r\n  //     .get(`${proxy}https://recipesapi.herokuapp.com/api/get?rId=${id}`)\r\n  //     .then((res) => {\r\n  //       dispatch({ type: FETCH_DETAIL_SUCCESS, payload: res.data.recipe });\r\n  //     })\r\n  //     .catch((error) => dispatch({ type: FETCH_DETAIL_FAILED, payload: error }));\r\n};\r\n\r\n// Handle likes recipe\r\nexport const addLike = (recipe) => ({\r\n  type: ADD_LIKE,\r\n  payload: recipe,\r\n});\r\n\r\nexport const deleteLike = (recipe) => ({\r\n  type: DELETE_LIKE,\r\n  payload: recipe,\r\n});\r\n\r\nexport const handleModal = (value) => ({\r\n  type: HANDLE_MODAL,\r\n  payload: value,\r\n});\r\n\r\nexport const handleConfirm = () => ({\r\n  type: HANDLE_CONFIRM,\r\n});\r\n\r\n// Handle pagination\r\nexport const handlePage = (pageNumber) => ({\r\n  type: CHANGE_PAGINATION_PAGE,\r\n  payload: pageNumber,\r\n});\r\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\r\nexport const RESET_SEARCH_FIELD = \"RESET_SEARCH_FIELD\";\r\nexport const IS_INPUT_EMPTY = \"IS_INPUT_EMPTY\";\r\n\r\nexport const FETCH_RECIPES_PENDING = \"FETCH_RECIPES_PENDING\";\r\nexport const FETCH_RECIPES_SUCCESS = \"FETCH_RECIPES_SUCCESS\";\r\nexport const FETCH_RECIPES_FAILED = \"FETCH_RECIPES_FAILED\";\r\n\r\nexport const FETCH_DETAIL_PENDING = \"FETCH_RDETAIL_PENDING\";\r\nexport const FETCH_DETAIL_SUCCESS = \"FETCH_DETAIL_SUCCESS\";\r\nexport const FETCH_DETAIL_FAILED = \"FETCH_DETAIL_FAILED\";\r\n\r\nexport const ADD_LIKE = \"ADD_LIKE\";\r\nexport const DELETE_LIKE = \"DELETE_LIKE\";\r\nexport const RESET_LIKE = \"RESET_LIKE\";\r\nexport const HANDLE_MODAL = \"HANDLE_MODAL\";\r\nexport const HANDLE_CONFIRM = \"HANDLE_CONFIRM\";\r\n\r\nexport const CHANGE_PAGINATION_PAGE = \"CHANGE_PAGINATION_PAGE\";\r\n","import React from \"react\";\r\nimport {\r\n  setSearchField,\r\n  isInputEmpty,\r\n  getRecipes,\r\n  resetSearchField,\r\n} from \"./../actions/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst SearchForm = () => {\r\n  const dispatch = useDispatch();\r\n  const emptyInput = useSelector((state) => state.searchField.emptyInput);\r\n  const searchField = useSelector((state) => state.searchField.searchField);\r\n\r\n  const onChangeSearch = (e) => {\r\n    dispatch(setSearchField(e.target.value));\r\n  };\r\n\r\n  const onClickSearch = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (searchField === \"\") {\r\n      dispatch(isInputEmpty(true));\r\n    } else if (searchField !== \"\") {\r\n      dispatch(getRecipes(searchField));\r\n      dispatch(resetSearchField());\r\n      dispatch(isInputEmpty(false));\r\n    }\r\n  };\r\n\r\n  const inputValidation = emptyInput ? (\r\n    <p className=\"input__validation\">Please fill in the form above</p>\r\n  ) : null;\r\n\r\n  return (\r\n    <form className=\"search\">\r\n      <input\r\n        value={searchField}\r\n        type=\"text\"\r\n        className=\"search__field\"\r\n        placeholder=\"Search over your favorites recipes...\"\r\n        onChange={onChangeSearch}\r\n      />\r\n      {inputValidation}\r\n      <button className=\"btn search__btn\" onClick={onClickSearch}>\r\n        <i className=\"fas fa-search\"></i>\r\n        <span>Search</span>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n","const useLimitTitle = () => {\r\n  // Function for converting string (condition: title max character are 18)\r\n  const titleConvert = (title, limit = 18) => {\r\n    const newTitle = [];\r\n    if (title.length > limit) {\r\n      title.split(\" \").reduce((acc, cur) => {\r\n        if (acc + cur.length <= limit) {\r\n          newTitle.push(cur);\r\n        }\r\n        return acc + cur.length;\r\n      }, 0);\r\n\r\n      // return the result\r\n      return `${newTitle.join(\" \")}...`;\r\n    } else {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  return [titleConvert];\r\n};\r\n\r\nexport default useLimitTitle;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getRecipeDetail } from \"../actions\";\r\nimport useLimitTitle from \"./hooks/useLimitTitle\";\r\n\r\nconst Like = ({ id, title, author, img }) => {\r\n  const dispatch = useDispatch();\r\n  const [titleConvert] = useLimitTitle();\r\n\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={`/${id}`}\r\n        onClick={() => dispatch(getRecipeDetail(id))}\r\n        className=\"likes__link\"\r\n      >\r\n        <figure className=\"likes__fig\">\r\n          <img src={img} alt=\"Test\" />\r\n        </figure>\r\n        <div className=\"likes__data\">\r\n          {/* <h4 className=\"likes__name\">{limitRecipeTitle(title)}</h4> */}\r\n          <h4 className=\"likes__name\">{titleConvert(title)}</h4>\r\n          <p className=\"likes__author\">{author}</p>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\nimport Like from \"./Like\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleModal } from \"./../actions/index\";\r\n\r\nconst Likes = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const likedRecipes = useSelector((state) => state.handleLikes.likedRecipes);\r\n  const heartActive = likedRecipes.length ? \"active\" : null;\r\n\r\n  return (\r\n    <div className=\"likes\">\r\n      <div className=\"likes__field\">\r\n        <i className={`fas fa-heart ${heartActive}`}></i>\r\n      </div>\r\n      <div className=\"likes__panel\">\r\n        <ul className=\"likes__list\">\r\n          {likedRecipes.length > 0 ? (\r\n            likedRecipes.map((el, i) => {\r\n              return (\r\n                <Like\r\n                  key={el.id}\r\n                  id={el.id}\r\n                  img={el.img}\r\n                  title={el.title}\r\n                  author={el.author}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <p className=\"empty__favorite\">Your have no favorite recipe</p>\r\n          )}\r\n        </ul>\r\n        {likedRecipes.length ? (\r\n          <button\r\n            onClick={() => dispatch(handleModal(true))}\r\n            className=\"btn delete__likes\"\r\n          >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Clear All</span>\r\n          </button>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Likes;\r\n","import React from \"react\";\r\nimport Logo from \"./AppLogo\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport Likes from \"./Likes\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Logo />\r\n      <SearchForm />\r\n      <Likes />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getRecipeDetail } from \"../actions\";\r\nimport useLimitTitle from \"./hooks/useLimitTitle\";\r\n// Function for converting string (condition: title max character are 18)\r\n// export const limitRecipeTitle = (title, limit = 18) => {\r\n//   const newTitle = [];\r\n//   if (title.length > limit) {\r\n//     title.split(\" \").reduce((acc, cur) => {\r\n//       if (acc + cur.length <= limit) {\r\n//         newTitle.push(cur);\r\n//       }\r\n//       return acc + cur.length;\r\n//     }, 0);\r\n\r\n//     // return the result\r\n//     return `${newTitle.join(\" \")}...`;\r\n//   } else {\r\n//     return title;\r\n//   }\r\n// };\r\n\r\nconst Recipe = ({\r\n  image_url,\r\n  publisher,\r\n  recipe_id,\r\n  title,\r\n  // handleRecipeDetail,\r\n}) => {\r\n  const [titleConvert] = useLimitTitle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleRecipeDetail = (recipe_id) => {\r\n    dispatch(getRecipeDetail(recipe_id));\r\n\r\n    document\r\n      .querySelectorAll(\".results__link\")\r\n      .forEach((el) => el.classList.remove(\"result__link--active\"));\r\n\r\n    document\r\n      .querySelector(`a[href=\"/${recipe_id}\"]`)\r\n      .classList.add(\"result__link--active\");\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={`/${recipe_id}`}\r\n        onClick={() => handleRecipeDetail(recipe_id)}\r\n        className=\"results__link\"\r\n        // href={`#${recipe_id}`}\r\n      >\r\n        <figure className=\"results__fig\">\r\n          <img src={image_url} alt={title} />\r\n        </figure>\r\n        <div className=\"results__data\">\r\n          <h4 className=\"results__name\">{titleConvert(title)}</h4>\r\n          <p className=\"results__author\">{publisher}</p>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\nimport loading from \"../img/icons/refresh.png\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n    // <div className=\"spinner\">\r\n    //   <i className=\"fas fa-spinner fa-spin\"></i>\r\n    // </div>\r\n    <div className=\"loading-spinner\">\r\n      <img className=\"spin spinner-icon\" src={loading} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useSlicedList = () => {\r\n  const [slicedList, setSlicedList] = useState([]);\r\n\r\n  const recipes = useSelector((state) => state.getRecipes.recipes);\r\n  const currentPage = useSelector(\r\n    (state) => state.handlePagination.currentPage\r\n  );\r\n  const listPerPage = useSelector(\r\n    (state) => state.handlePagination.listPerPage\r\n  );\r\n\r\n  useEffect(() => {\r\n    const indexOfLastPost = currentPage * listPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - listPerPage;\r\n\r\n    setSlicedList(recipes.slice(indexOfFirstPost, indexOfLastPost));\r\n  }, [recipes, currentPage, listPerPage]);\r\n\r\n  return [slicedList];\r\n};\r\n\r\nexport default useSlicedList;\r\n","import React from \"react\";\r\nimport Recipe from \"./Recipe\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useSlicedList from \"./hooks/useSlicedList\";\r\n\r\nconst RecipeList = () => {\r\n  const [slicedList] = useSlicedList();\r\n\r\n  const loading = useSelector((state) => state.getRecipes.isPending);\r\n  const errorMessage = useSelector((state) => state.getRecipes.error);\r\n  const recipeAPIResult = useSelector(\r\n    (state) => state.getRecipes.recipeAPIResult\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  } else if (recipeAPIResult === 0) {\r\n    return <p className=\"result__none\">Sorry, no result found...</p>;\r\n  }\r\n\r\n  if (errorMessage !== \"\") {\r\n    return <p className=\"result__none\">{errorMessage}</p>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"results__list\">\r\n      {slicedList.map((recipe, i) => (\r\n        <Recipe key={i} {...recipe} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default RecipeList;\r\n","const useResetActiveClass = () => {\r\n  const removeResultsClass = () => {\r\n    // reset pagination active class\r\n    document\r\n      .querySelectorAll(\".results__pages li\")\r\n      .forEach((el) => el.classList.remove(\"active\"));\r\n    document\r\n      .querySelectorAll(\".results__pages a\")\r\n      .forEach((el) => el.classList.remove(\"active\"));\r\n\r\n    // reset recipe list active class\r\n    document\r\n      .querySelectorAll(\".results__link\")\r\n      .forEach((el) => el.classList.remove(\"result__link--active\"));\r\n  };\r\n\r\n  return [removeResultsClass];\r\n};\r\n\r\nexport default useResetActiveClass;\r\n","const usePageNumber = () => {\r\n  const pageNumber = [];\r\n  const calculatePage = (a, b) => {\r\n    // Total list of pagination in array\r\n    for (let i = 1; i <= Math.ceil(a / b); i++) {\r\n      pageNumber.push(i);\r\n    }\r\n  };\r\n\r\n  return [pageNumber, calculatePage];\r\n};\r\n\r\nexport default usePageNumber;\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handlePage } from \"../actions\";\r\nimport useResetActiveClass from \"./hooks/useResetActiveClass\";\r\nimport usePageNumber from \"./hooks/usePageNumber\";\r\n\r\nconst Pagination = () => {\r\n  const [removeResultsClass] = useResetActiveClass();\r\n  const [pageNumber, calculatePage] = usePageNumber();\r\n\r\n  const dispatch = useDispatch();\r\n  const listPerPage = useSelector(\r\n    (state) => state.handlePagination.listPerPage\r\n  );\r\n  const recipes = useSelector((state) => state.getRecipes.recipes);\r\n  const recipeDetail = useSelector(\r\n    (state) => state.getRecipeDetail.recipeDetail\r\n  );\r\n\r\n  console.log(recipeDetail);\r\n  const totalRecipes = recipes.length;\r\n\r\n  calculatePage(totalRecipes, listPerPage);\r\n\r\n  const handlePaginate = (pageNumber, e) => {\r\n    dispatch(handlePage(pageNumber));\r\n\r\n    removeResultsClass();\r\n\r\n    e.target.classList.add(\"active\");\r\n    e.target.parentNode.classList.add(\"active\");\r\n  };\r\n\r\n  const currentPath = useLocation().pathname;\r\n\r\n  useEffect(() => {\r\n    // Apply pagination active class on first render\r\n    if (recipes.length > 0) {\r\n      document.querySelector(\".results__pages .list-1\").classList.add(\"active\");\r\n      document.querySelector(\".results__pages .link-1\").classList.add(\"active\");\r\n    }\r\n  }, [recipes]);\r\n\r\n  return (\r\n    <div className=\"results__pages\">\r\n      <ul>\r\n        {pageNumber.map((number) => (\r\n          <li className={`list-${number}`} key={number}>\r\n            <Link\r\n              to={currentPath}\r\n              className={`link-${number}`}\r\n              // onClick={(e) => paginate(number, e)}\r\n              onClick={(e) => handlePaginate(number, e)}\r\n            >\r\n              {number}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport RecipeList from \"./RecipeList\";\r\nimport Pagination from \"./Pagination\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ResultRecipe = () => {\r\n  const loading = useSelector((state) => state.getRecipes.isPending);\r\n\r\n  return (\r\n    <div className=\"results\">\r\n      <RecipeList />\r\n      {loading ? null : <Pagination />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultRecipe;\r\n","import React from \"react\";\r\n\r\nconst RecipeFig = ({ recipeDetail }) => {\r\n  return (\r\n    <figure className=\"recipe__fig\">\r\n      <img\r\n        src={recipeDetail.image_url}\r\n        alt={recipeDetail.title}\r\n        className=\"recipe__img\"\r\n      />\r\n      <h1 className=\"recipe__title\">\r\n        <span>{recipeDetail.title}</span>\r\n      </h1>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default RecipeFig;\r\n","const useLiked = () => {\r\n  const isLiked = (id, target) => {\r\n    return target.findIndex((el) => el.id === id) !== -1;\r\n  };\r\n\r\n  const deleteLiked = (id, target) => {\r\n    const index = target.findIndex((el) => el.id === id);\r\n    target.splice(index, 1);\r\n  };\r\n\r\n  return [isLiked, deleteLiked];\r\n};\r\n\r\nexport default useLiked;\r\n","import { useState } from \"react\";\r\n\r\nconst useCalcTime = () => {\r\n  const [periods, setPeriods] = useState();\r\n\r\n  const calcTime = (ingredients) => {\r\n    // Assuming that we need 10 min for each 3 ingredient\r\n    const numIng = ingredients.length;\r\n    const periods = Math.ceil(numIng / 3);\r\n    setPeriods(periods * 10);\r\n  };\r\n\r\n  return [periods, calcTime];\r\n};\r\n\r\nexport default useCalcTime;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addLike, deleteLike } from \"../actions\";\r\nimport useLiked from \"./hooks/useLiked\";\r\nimport useCalcTime from \"./hooks/useCalcTime\";\r\n\r\nconst RecipeDetails = (props) => {\r\n  const params = useParams().id;\r\n  const dispatch = useDispatch();\r\n  const recipeDetail = useSelector(\r\n    (state) => state.getRecipeDetail.recipeDetail\r\n  );\r\n  const likedRecipes = useSelector((state) => state.handleLikes.likedRecipes);\r\n\r\n  const [isLiked, deleteLiked] = useLiked();\r\n  const [periods, calcTime] = useCalcTime();\r\n  const ingredients = recipeDetail.ingredients;\r\n\r\n  useEffect(() => {\r\n    calcTime(ingredients);\r\n  }, [ingredients, calcTime]);\r\n\r\n  const handleLike = (params) => {\r\n    const currentID = params;\r\n    let likes = [...likedRecipes];\r\n\r\n    // User has NOT yet liked the currect recipe\r\n    if (!isLiked(currentID, likedRecipes)) {\r\n      const like = {\r\n        id: recipeDetail.recipe_id,\r\n        title: recipeDetail.title,\r\n        author: recipeDetail.publisher,\r\n        img: recipeDetail.image_url,\r\n      };\r\n      dispatch(addLike(like));\r\n\r\n      // User HAS liked the currect recipe\r\n    } else {\r\n      deleteLiked(params, likes);\r\n      dispatch(deleteLike(likes));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"recipe__details\">\r\n      <div className=\"recipe__info\">\r\n        <i className=\"recipe__info-icon fa fa-stopwatch\"></i>\r\n        <span className=\"recipe__info-data recipe__info-data--minutes\">\r\n          {/* {calcTime()} */}\r\n          {periods}\r\n        </span>\r\n        <span className=\"recipe__info-text\"> minutes</span>\r\n      </div>\r\n      <div className=\"recipe__info\">\r\n        <i className=\"recipe__info-icon fa fa-users\"></i>\r\n        <span className=\"recipe__info-data recipe__info-data--people\">4</span>\r\n        <span className=\"recipe__info-text\"> servings</span>\r\n        <div className=\"recipe__info-buttons\">\r\n          {/* <button className=\"btn-tiny\"></button>\r\n          <button className=\"btn-tiny\"></button> */}\r\n        </div>\r\n      </div>\r\n      <button onClick={() => handleLike(params)} className=\"recipe__love\">\r\n        <i\r\n          className={\r\n            isLiked(params, likedRecipes) ? \"fas fa-heart\" : \"far fa-heart\"\r\n          }\r\n        ></i>\r\n        {/* <i className=\"fas fa-heart\"></i> */}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetails;\r\n","import React from \"react\";\r\n\r\nconst IngredientItem = ({ ingredient }) => {\r\n  return (\r\n    <li className=\"recipe__item\">\r\n      <i className=\"recipe__icon far fa-check-circle\"></i>\r\n      {/* <svg className=\"recipe__icon\">\r\n        <use href=\"img/icons.svg#icon-check\"></use>\r\n      </svg> */}\r\n      <div className=\"recipe__count\"></div>\r\n      <div className=\"recipe__ingredient\">\r\n        <span className=\"recipe__unit\"></span>\r\n        {ingredient}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import React from \"react\";\r\nimport IngredientItem from \"./IngredientItem\";\r\n\r\nconst IngredientList = ({ recipeDetail }) => {\r\n  return (\r\n    <ul className=\"recipe__ingredient-list\">\r\n      {recipeDetail.ingredients\r\n        ? recipeDetail.ingredients.map((ingredient, i) => (\r\n            <IngredientItem key={i} ingredient={ingredient} />\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default IngredientList;\r\n","import React from \"react\";\r\nimport IngredientList from \"./IngredientList\";\r\n\r\nconst RecipeIngredient = ({ recipeDetail }) => {\r\n  return (\r\n    <div className=\"recipe__ingredients\">\r\n      <IngredientList recipeDetail={recipeDetail} />\r\n\r\n      <button className=\"btn-small recipe__btn\">\r\n        {/* <svg className=\"search__icon\">\r\n          <use href=\"img/icons.svg#icon-shopping-cart\"></use>\r\n        </svg> */}\r\n        {/* <i className=\"fas fa-shopping-cart\"></i> */}\r\n        <span>Add Review (coming soon)</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeIngredient;\r\n","import React from \"react\";\r\n\r\nconst RecipeDirections = ({ recipeDetail }) => {\r\n  return (\r\n    <div className=\"recipe__directions\">\r\n      <h2 className=\"heading-2\">How to cook it</h2>\r\n      <p className=\"recipe__directions-text\">\r\n        This recipe was carefully designed and tested by\r\n        <span className=\"recipe__by\"> {recipeDetail.publisher}</span>. Please\r\n        check out directions at their website.\r\n      </p>\r\n      <a\r\n        className=\"btn-small recipe__btn\"\r\n        href={recipeDetail.source_url}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <span>Directions</span>\r\n        <i className=\"fa fa-location-arrow\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDirections;\r\n","import React from \"react\";\r\nimport RecipeFig from \"./RecipeFig\";\r\nimport RecipeDetails from \"./RecipeDetails\";\r\nimport RecipeIngredient from \"./RecipeIngredient\";\r\nimport RecipeDirections from \"./RecipeDirections\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst RecipePage = () => {\r\n  const recipeDetail = useSelector(\r\n    (state) => state.getRecipeDetail.recipeDetail\r\n  );\r\n  const loadingDetail = useSelector((state) => state.getRecipeDetail.isPending);\r\n\r\n  if (loadingDetail) {\r\n    return <LoadingSpinner />;\r\n  }\r\n  if (recipeDetail.recipe_id) {\r\n    return (\r\n      <div className=\"recipe\">\r\n        <RecipeFig recipeDetail={recipeDetail} />\r\n        <RecipeDetails\r\n          // handleLike={handleLike}\r\n          // likedRecipes={likedRecipes}\r\n          // isLiked={isLiked}\r\n          recipeDetail={recipeDetail}\r\n        />\r\n        <RecipeIngredient recipeDetail={recipeDetail} />\r\n        <RecipeDirections recipeDetail={recipeDetail} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default RecipePage;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { handleModal, handleConfirm } from \"./../actions/index\";\r\n\r\n// modalOpen\r\n// {handleModal, handleConfirm}\r\nconst ConfirmModal = () => {\r\n  const dispatch = useDispatch();\r\n  const modalOpen = useSelector((state) => state.handleLikes.modalOpen);\r\n\r\n  if (!modalOpen) return null;\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"confirm__modal\">\r\n        <div className=\"confirmation-text\">\r\n          <p>Are you sure?</p>\r\n        </div>\r\n        <div className=\"btn-group-modal\">\r\n          <button\r\n            className=\"btn-cancel\"\r\n            onClick={() => dispatch(handleModal(false))}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button className=\"btn-ok\" onClick={() => dispatch(handleConfirm())}>\r\n            OK\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import React, { Component } from \"react\";\n\n// font-awesome offline\nimport NavBar from \"../components/NavBar\";\nimport ResultRecipe from \"../components/ResultRecipe\";\n\nimport RecipePage from \"../components/RecipePage\";\nimport ConfirmModal from \"./../components/ConfirmModal\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.readStorage();\n  }\n\n  persistData = () => {\n    const { likedRecipes } = this.state;\n    localStorage.setItem(\"likedRecipes\", JSON.stringify(likedRecipes));\n  };\n\n  readStorage = () => {\n    const storage = JSON.parse(localStorage.getItem(\"likedRecipes\"));\n\n    //  Restore likes from the localStorage\n    if (storage) {\n      this.setState({\n        likedRecipes: storage,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Route path=\"/\" component={NavBar} />\n          <Route path=\"/\">\n            <ConfirmModal />\n          </Route>\n          <Route path=\"/\" component={ResultRecipe} />\n          <Route path=\"/:id\" component={RecipePage} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  RESET_SEARCH_FIELD,\r\n  IS_INPUT_EMPTY,\r\n  FETCH_RECIPES_PENDING,\r\n  FETCH_RECIPES_SUCCESS,\r\n  FETCH_RECIPES_FAILED,\r\n  FETCH_DETAIL_PENDING,\r\n  FETCH_DETAIL_SUCCESS,\r\n  FETCH_DETAIL_FAILED,\r\n  ADD_LIKE,\r\n  DELETE_LIKE,\r\n  CHANGE_PAGINATION_PAGE,\r\n  HANDLE_MODAL,\r\n  HANDLE_CONFIRM,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialStateSearch = {\r\n  searchField: \"\",\r\n  emptyInput: false,\r\n};\r\n\r\nexport const searchField = (state = initialStateSearch, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchField: action.payload,\r\n        emptyInput: false,\r\n      };\r\n    case RESET_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchField: \"\",\r\n      };\r\n    case IS_INPUT_EMPTY:\r\n      return {\r\n        ...state,\r\n        emptyInput: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRecipes = {\r\n  isPending: false,\r\n  recipes: [],\r\n  recipeAPIResult: null,\r\n  error: \"\",\r\n};\r\n\r\nexport const getRecipes = (state = initialStateRecipes, action) => {\r\n  switch (action.type) {\r\n    case FETCH_RECIPES_PENDING:\r\n      return {\r\n        ...state,\r\n        isPending: true,\r\n      };\r\n    case FETCH_RECIPES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        recipes: action.payload.data,\r\n        isPending: false,\r\n        recipeAPIResult: action.payload.count,\r\n        error: \"\",\r\n      };\r\n    case FETCH_RECIPES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isPending: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRecipeDetail = {\r\n  isPending: false,\r\n  recipeDetail: {},\r\n  error: \"\",\r\n};\r\n\r\nexport const getRecipeDetail = (state = initialStateRecipeDetail, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DETAIL_PENDING:\r\n      return {\r\n        ...state,\r\n        isPending: true,\r\n      };\r\n    case FETCH_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        recipeDetail: action.payload,\r\n        isPending: false,\r\n      };\r\n    case FETCH_DETAIL_FAILED:\r\n      return {\r\n        ...state,\r\n        errorDetail: action.payload,\r\n        isPending: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateLikes = {\r\n  likedRecipes: [],\r\n  modalOpen: false,\r\n};\r\n\r\nexport const handleLikes = (state = initialStateLikes, action) => {\r\n  switch (action.type) {\r\n    case ADD_LIKE:\r\n      return {\r\n        ...state,\r\n        likedRecipes: [...state.likedRecipes, action.payload],\r\n      };\r\n    case DELETE_LIKE:\r\n      return {\r\n        ...state,\r\n        likedRecipes: action.payload,\r\n      };\r\n    case HANDLE_CONFIRM:\r\n      return {\r\n        ...state,\r\n        likedRecipes: [],\r\n        modalOpen: false,\r\n      };\r\n    case HANDLE_MODAL:\r\n      return {\r\n        ...state,\r\n        modalOpen: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStatePagination = {\r\n  currentPage: 1,\r\n  listPerPage: 10,\r\n};\r\n\r\nexport const handlePagination = (state = initialStatePagination, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PAGINATION_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  searchField,\r\n  getRecipes,\r\n  getRecipeDetail,\r\n  handleLikes,\r\n  handlePagination,\r\n} from \"./reducers\";\r\n\r\nconst rootReducers = combineReducers({\r\n  searchField,\r\n  getRecipes,\r\n  getRecipeDetail,\r\n  handleLikes,\r\n  handlePagination,\r\n});\r\n\r\nexport default rootReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport rootReducers from \"./reducers/index\";\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}